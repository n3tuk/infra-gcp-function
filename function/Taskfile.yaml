---
version: 3
interval: 1000ms
output: prefixed

vars:
  base: github.com/n3tuk/infra-gcp-function
  coverage: .coverage
  modules:
    sh: |-
      go list ./... 2>/dev/null \
      | sed -e 's|^{{ .base }}/||'

tasks:
  default:
    cmds:
      - task: test

  fmt:
    aliases:
      - f
    desc: Properly format all .go files for the Cloud Function
    summary: |-
      Properly fomrmat all of the .go files for the Cloud Function using go
      (this is a write-based action which will make changes to all .go files, if
      required).
    sources:
      - '**/*.go'
    cmds:
      - cmd: go fmt ./...

  lint:
    aliases:
      - l
    desc: Lint the Cloud Function via golangci-lint
    summary: |-
      Lint to GoLang files for the Cloud Function using golangci-lint to check
      the code quality, and run prettier and other linters over any JSON and
      YAML files for the infrastructure code.
    sources:
      - 'main.go'
      - '**/*.go'
      - '../.golangci.yaml'
    cmds:
      - cmd: |-
          golangci-lint run \
            --config=../.golangci.yaml \
            --path-prefix=function \
            --verbose

  test:
    aliases:
      - t
    desc: Run the Unit Tests against the Cloud Function(s)
    summary: |-
      Test the Cloud Function via Unit Tests to validate that is will operate as
      expected.
    sources:
      - '**/*.go'
    env:
      GIN_MODE: test
    cmds:
      # If this taskfile is being run inside of tmux, tell tmux to send the
      # Enter key to the same pane as this is running in so that it exits
      # scrolling mode as the new tests are run.
      # Stops me accidentally looking at the old tests and wondering why the fix
      # didn't work!
      - cmd: |-
          ( test -n "$TMUX_PANE" \
            && tmux send-keys -t $TMUX_PANE Enter
          ) || true
        silent: true
      - cmd: |-
          mkdir -p {{ .coverage }}
        silent: true
      - for:
          var: modules
          as: module
        cmd: |-
          go test -v -cover {{.base }}/{{ .module }} \
            -args -test.gocoverdir="{{ .TASKFILE_DIR }}/{{ .coverage }}"
      - cmd: |-
          go tool covdata func -i {{ .coverage }}
      # Convert all the data into an HTML page for easy viewing of code coverage
      - cmd: |-
          go tool covdata textfmt -i {{ .coverage }} -o coverage.out
          go tool cover -html coverage.out -o coverage.html
        silent: true

  serve:
    aliases:
      - s
    desc: Service the Cloud Function
    summary: |-
      Start and serve the Cloud Function locally so it can be accessed for testing.
    deps:
      - task: lint
      - task: test
    sources:
      - '**/*.go'
    env:
      FUNCTION_TARGET: server
      LOCAL_ONLY: true
      GIN_MODE: release
    cmds:
      - cmd: |-
          go run cmd/main.go

  clean:
    desc: Clean up the temporary files and directories for the Cloud Function
    summary: |-
      Clean up any known temporary files and directories within the repository
      that have been created either by the Cloud Function development.
    run: once
    cmds:
      - cmd: rm -rf {{ .coverage }} coverage.{out,html}
      - cmd: rm -rf .task
